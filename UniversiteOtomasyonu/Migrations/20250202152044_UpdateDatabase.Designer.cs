// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversiteOtomasyonu.Context;

#nullable disable

namespace UniversiteOtomasyonu.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250202152044_UpdateDatabase")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FakulteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FakulteId");

                    b.ToTable("Bolums");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.BolumDers", b =>
                {
                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.HasKey("DersId", "BolumId");

                    b.HasIndex("BolumId");

                    b.ToTable("BolumDers");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Derss");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Fakulte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fakultes");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Yetki")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Notlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("Not")
                        .HasColumnType("int");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("Notlars");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.ToTable("Ogrencis");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.OgretimGorevlisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.ToTable("OgretimGorevlisis");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sinif");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Bolum", b =>
                {
                    b.HasOne("UniversiteOtomasyonu.Entities.Fakulte", "Fakulte")
                        .WithMany("Bolums")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulte");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.BolumDers", b =>
                {
                    b.HasOne("UniversiteOtomasyonu.Entities.Bolum", "Bolum")
                        .WithMany("BolumDers")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversiteOtomasyonu.Entities.Ders", "Ders")
                        .WithMany("BolumDers")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("Ders");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Notlar", b =>
                {
                    b.HasOne("UniversiteOtomasyonu.Entities.Ders", "Ders")
                        .WithMany("Notlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversiteOtomasyonu.Entities.Ogrenci", "Ogrenci")
                        .WithMany("Notlar")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Ogrenci", b =>
                {
                    b.HasOne("UniversiteOtomasyonu.Entities.Bolum", "Bolum")
                        .WithMany("Ogrencis")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.OgretimGorevlisi", b =>
                {
                    b.HasOne("UniversiteOtomasyonu.Entities.Bolum", "Bolum")
                        .WithMany("OgretimGorevlisis")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Bolum", b =>
                {
                    b.Navigation("BolumDers");

                    b.Navigation("Ogrencis");

                    b.Navigation("OgretimGorevlisis");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Ders", b =>
                {
                    b.Navigation("BolumDers");

                    b.Navigation("Notlar");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Fakulte", b =>
                {
                    b.Navigation("Bolums");
                });

            modelBuilder.Entity("UniversiteOtomasyonu.Entities.Ogrenci", b =>
                {
                    b.Navigation("Notlar");
                });
#pragma warning restore 612, 618
        }
    }
}
